{"version":3,"sources":["contexts/CountriesContext.js","components/Header.js","components/Country.js","components/Search.js","components/ListCountries.js","components/Home.js","data/GetAllCountries.js","routers/AppRouter.js","App.js","index.js"],"names":["CountriesContext","createContext","Header","useContext","bgColor","setBgColor","document","body","style","backgroundColor","className","to","onClick","Country","name","useParams","useState","country","setCountry","useEffect","a","url","fetch","resp","json","data","getCountry","id","map","src","flags","svg","alt","common","population","region","subregion","capital","tld","JSON","stringify","currencies","languages","borders","borde","png","Search","setCountries","getRegion","e","parseInt","target","value","alert","name_region","countries","handleSubmit","preventDefault","searchCountry","length","onSubmit","type","placeholder","onChange","ListCountries","loading","textAlign","marginTop","parseFloat","Home","GetAllCountries","console","log","AppRouter","setLoading","then","Provider","path","element","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2b4484b0.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst CountriesContext = createContext();\n\nexport default CountriesContext;\n","import { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport CountriesContext from \"../contexts/CountriesContext\";\n\n//import { useState } from \"react\";\n\nconst Header = () => {\n  const [, , bgColor, setBgColor] = useContext(CountriesContext);\n  document.body.style.backgroundColor = `${bgColor ? \"#fafafa\" : \"#202C37\"}`;\n  return (\n    <header className={bgColor ? `header` : `headerDark`}>\n      <div className=\"container content\">\n        <Link to=\"/\">\n          <h2>What is the wolrd?</h2>\n        </Link>\n        <div className=\"darkMode\" onClick={() => setBgColor(!bgColor)}>\n          <i className={bgColor ? `far fa-moon` : `fas fa-sun`}></i>{\" \"}\n          {bgColor ? <span>Dark mode</span> : <span>Clear mode</span>}\n        </div>\n      </div>\n    </header>\n  );\n};\nexport default Header;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport CountriesContext from \"../contexts/CountriesContext\";\n\nconst Country = () => {\n  const [, , bgColor, ,] = useContext(CountriesContext);\n  const { name } = useParams();\n  const [country, setCountry] = useState([]);\n\n  useEffect(() => {\n    const getCountry = async () => {\n      const url = `https://restcountries.com/v3.1/name/${name}`;\n      const resp = await fetch(url);\n      const data = await resp.json();\n      setCountry(data);\n    };\n    getCountry();\n  }, [name]);\n\n  return (\n    <>\n      <Header />\n      <div className={bgColor ? `bgLight` : `bgDark`}>\n        <div id=\"country\">\n          <div className={bgColor ? `back` : `backDark`}>\n            <Link to=\"/\">\n              {\" \"}\n              <i className=\"fas fa-arrow-left\"></i> Back\n            </Link>\n          </div>\n          {country.map((data) => (\n            <div className=\"details\" key={data.flags.png}>\n              <div className=\"flag\">\n                <img src={data.flags.svg} alt={data.name.common} />\n              </div>\n              <div className={bgColor ? `info` : `infoDark`}>\n                <h2>{data.name.common}</h2>\n                <div className=\"info_details\">\n                  <div>\n                    <p>\n                      <strong>Native Name: </strong>\n                      {data.name.common}\n                    </p>\n                    <p>\n                      <strong>Population: </strong>\n                      {data.population}\n                    </p>\n                    <p>\n                      <strong>Region: </strong>\n                      {data.region}\n                    </p>\n                    <p>\n                      <strong>Sub Region: </strong>\n                      {data.subregion}\n                    </p>\n                    <p>\n                      <strong>Capital: </strong>\n                      {data.capital}\n                    </p>\n                  </div>\n                  <div>\n                    <p>\n                      <strong>Top Level Domain: </strong>\n                      {data.tld}\n                    </p>\n                    <p>\n                      <strong>Currencies: </strong>\n                      {JSON.stringify(data?.currencies)}\n                    </p>\n                    <p>\n                      <strong>Languages: </strong>\n                      {JSON.stringify(data?.languages)}\n                    </p>\n                  </div>\n                </div>\n\n                <p>\n                  <strong>Borders countries: </strong>\n\n                  {data.borders?.map((borde) => (\n                    <span\n                      className={bgColor ? `border` : `borderDark`}\n                      key={borde}\n                    >\n                      {borde}\n                    </span>\n                  ))}\n                </p>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Country;\n","import { useContext, useState } from \"react\";\nimport CountriesContext from \"../contexts/CountriesContext\";\n\nconst Search = () => {\n  const data = useContext(CountriesContext);\n  const [, setCountries, bgColor] = data;\n  const [country, setCountry] = useState(\"\");\n\n  const getRegion = async (e) => {\n    const region = parseInt(e.target.value);\n    if (region === 0) {\n      alert(\"Select a Region\");\n    } else {\n      const region = e.target.value;\n      const name_region = region;\n      const url = \"https://restcountries.com/v3.1/region/\";\n      const resp = await fetch(url + name_region);\n      const countries = await resp.json();\n      setCountries(countries);\n    }\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const url = `https://restcountries.com/v3.1/name/${country}`;\n    const resp = await fetch(url);\n    const searchCountry = await resp.json();\n    if (searchCountry.length > 0) {\n      setCountries(searchCountry);\n    } else {\n      alert(\"there is not result with your search\");\n      setCountry(\"\");\n    }\n  };\n  const handleInputChange = (e) => {\n    setCountry(e.target.value);\n  };\n\n  return (\n    <>\n      <section className={bgColor ? `bgLight` : `bgDark`}>\n        <div className=\"container\" id=\"search\">\n          <div className={bgColor ? `country` : `countryDark`}>\n            <form onSubmit={handleSubmit}>\n              <i className=\"fas fa-search\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Search for a country...\"\n                name=\"country\"\n                onChange={handleInputChange}\n                value={country}\n              />\n            </form>\n          </div>\n          <div className={bgColor ? `region` : `regionDark`}>\n            <select name=\"region\" onChange={getRegion}>\n              <option value=\"0\">Select Region</option>\n              <option value=\"Africa\">Africa</option>\n              <option value=\"Americas\">Americas</option>\n              <option value=\"Asia\">Asia</option>\n              <option value=\"Europe\">Europe</option>\n              <option value=\"Oceania\">Oceania</option>\n            </select>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default Search;\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport CountriesContext from \"../contexts/CountriesContext\";\n\nconst ListCountries = () => {\n  const data = useContext(CountriesContext);\n  const [countries, , bgColor, , loading] = data;\n  return (\n    <>\n      <section className={bgColor ? `bgLight` : `bgDark`}>\n        {loading && (\n          <h2\n            className=\"container\"\n            style={{ textAlign: \"center\", marginTop: 40 }}\n          >\n            Loading Countries...\n          </h2>\n        )}\n        <div id=\"countries\" className=\"container\">\n          {countries.map((country) => (\n            <Link\n              to={`/country/${country.name.common}`}\n              key={country.flags.png}\n            >\n              <div className={bgColor ? `country` : `countryDark`}>\n                <img src={country.flags.svg} alt={country.name.common} />\n                <h2>{country?.name.common}</h2>\n                <p>\n                  <strong>Population: </strong>\n                  {parseFloat(country.population)}\n                </p>\n                <p>\n                  <strong>Region: </strong>\n                  {country.region}\n                </p>\n                <p>\n                  <strong>Capital: </strong>\n                  {country.capital}\n                </p>\n              </div>\n            </Link>\n          ))}\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default ListCountries;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Search from \"./Search\";\nimport ListCountries from \"./ListCountries\";\n\nconst Home = () => {\n  return (\n    <>\n      <Header />\n      <Search />\n      <ListCountries />\n    </>\n  );\n};\n\nexport default Home;\n","const GetAllCountries = async () => {\n  try {\n    const url = \"https://restcountries.com/v3.1/all\";\n\n    const resp = await fetch(url);\n    const data = await resp.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default GetAllCountries;\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Country from \"../components/Country\";\nimport Home from \"../components/Home\";\nimport CountriesContext from \"../contexts/CountriesContext\";\nimport GetAllCountries from \"../data/GetAllCountries\";\n\nconst AppRouter = () => {\n  const [countries, setCountries] = useState([]);\n  const [bgColor, setBgColor] = useState(true);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    GetAllCountries().then((data) => {\n      setCountries(data);\n      setLoading(false);\n    });\n  }, []);\n  return (\n    <CountriesContext.Provider\n      value={[countries, setCountries, bgColor, setBgColor, loading]}\n    >\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/home\" element={<Home />} />\n          <Route path=\"country/:name\" element={<Country />} />\n        </Routes>\n      </BrowserRouter>\n    </CountriesContext.Provider>\n  );\n};\n\nexport default AppRouter;\n","import React from \"react\";\nimport AppRouter from \"./routers/AppRouter\";\n\nfunction App() {\n  return <AppRouter />;\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/styles.scss\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}